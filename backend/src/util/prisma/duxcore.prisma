datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

enum UserRole {
  SUPER_ADMINISTRATOR
  ADMINISTRATOR
  SYS_ADMIN
  MODERATOR
  USER
}

model User {
  id            String              @id @default(uuid())
  index         Int                 @default(autoincrement())
  name          String
  username      String              @unique
  email         String              @unique
  password      String?
  loginAttempts UserLoginAttempts[]
  created       DateTime            @default(now())
  updatedAt     DateTime            @updatedAt
  role          UserRole            @default(USER)
  meta_tags     UserMetaTags?
  meta          Json                @default("{}")
  Token         Token?
}

model Token {
  id        Int       @id @default(autoincrement())
  user      User      @relation(fields: [userId], references: [id])
  userId    String
  jid       String    @unique
  revoked   Boolean   @default(false)
  revokedAt DateTime?
  issuedAt  DateTime  @default(now())
}

model UserMetaTags {
  id            Int      @id @default(autoincrement())
  user          User     @relation(fields: [userId], references: [id])
  userId        String
  updatedAt     DateTime @updatedAt
  emailVerified Boolean  @default(false)
  isStaff       Boolean  @default(false)
}

model UserLoginAttempts {
  id           Int      @id @default(autoincrement())
  date         DateTime @default(now())
  ip           String
  agent        String
  user         User     @relation(references: [id], fields: [userId])
  userId       String
  accepted     Boolean
  denialReason String?
}
